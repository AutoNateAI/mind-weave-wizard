@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Base palette - Enhanced Light Mode */
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    /* Enhanced cyber theme for light mode */
    --primary: 268 83% 58%; /* neon violet */
    --primary-foreground: 210 40% 98%;
    --primary-glow: 280 100% 70%; /* brighter violet for effects */
    --primary-subtle: 268 50% 85%; /* subtle version for light mode */

    --secondary: 240 10% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 240 5% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 190 90% 45%; /* cyber teal */
    --accent-foreground: 210 40% 98%;
    --accent-glow: 190 100% 60%; /* brighter teal for light mode */

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 268 83% 58%;

    --radius: 0.75rem;

    /* Sidebar */
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 268 83% 58%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 268 83% 58%;

    /* Enhanced light mode design tokens */
    --gradient-primary: linear-gradient(135deg, hsl(268 83% 58%), hsl(190 90% 45%));
    --gradient-secondary: linear-gradient(180deg, hsl(240 5% 98%), hsl(240 10% 94%));
    --gradient-accent: linear-gradient(45deg, hsl(190 90% 45%), hsl(280 100% 70%));
    --gradient-subtle: linear-gradient(135deg, hsl(268 50% 95%), hsl(190 50% 95%));
    
    --glass-bg: 0 0% 100% / 70%;
    --glass-border: 268 30% 85% / 40%;
    
    --shadow-elegant: 0 20px 60px -20px hsl(268 83% 58% / 0.15);
    --shadow-glow: 0 0 40px hsl(268 83% 58% / 0.2);
    --shadow-accent: 0 10px 30px -10px hsl(190 90% 45% / 0.3);
    --shadow-neon: 0 0 20px hsl(268 83% 58% / 0.4), 0 0 40px hsl(190 90% 45% / 0.2);
    
    --transition-smooth: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 200ms cubic-bezier(0.68, -0.55, 0.265, 1.55);

    /* React Flow theming for light mode */
    --rf-node-bg: hsl(0 0% 100%);
    --rf-node-border: hsl(268 30% 85%);
    --rf-node-text: hsl(222 84% 5%);
    --rf-node-selected: hsl(268 83% 58%);
    --rf-edge-stroke: hsl(268 50% 70%);
    --rf-background: hsl(240 5% 98%);
  }

  .dark {
    /* Dark mode - Enhanced cyber theme */
    --background: 222 47% 7%;
    --foreground: 210 40% 98%;

    --card: 222 47% 9%;
    --card-foreground: 210 40% 98%;

    --popover: 222 47% 9%;
    --popover-foreground: 210 40% 98%;

    /* Enhanced dark mode primary colors */
    --primary: 280 100% 70%; /* brighter neon in dark */
    --primary-foreground: 222 47% 7%;
    --primary-glow: 268 83% 58%;
    --primary-subtle: 280 50% 30%;

    --secondary: 222 47% 15%;
    --secondary-foreground: 210 40% 98%;

    --muted: 222 47% 12%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 190 100% 55%; /* brighter cyan in dark */
    --accent-foreground: 222 47% 7%;
    --accent-glow: 190 90% 45%;

    --destructive: 0 72% 55%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 47% 20%;
    --input: 222 47% 20%;
    --ring: 280 100% 70%;

    /* Dark sidebar */
    --sidebar-background: 222 47% 5%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 280 100% 70%;
    --sidebar-primary-foreground: 222 47% 5%;
    --sidebar-accent: 222 47% 12%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 222 47% 15%;
    --sidebar-ring: 280 100% 70%;

    /* Dark mode design tokens */
    --gradient-primary: linear-gradient(135deg, hsl(280 100% 70%), hsl(190 100% 55%));
    --gradient-secondary: linear-gradient(180deg, hsl(222 47% 9%), hsl(222 47% 5%));
    --gradient-accent: linear-gradient(45deg, hsl(190 100% 55%), hsl(280 100% 70%));
    --gradient-subtle: linear-gradient(135deg, hsl(280 30% 20%), hsl(190 30% 20%));
    
    --glass-bg: 222 47% 9% / 60%;
    --glass-border: 280 50% 50% / 30%;
    
    --shadow-elegant: 0 20px 60px -20px hsl(280 100% 70% / 0.4);
    --shadow-glow: 0 0 50px hsl(280 100% 70% / 0.5);
    --shadow-accent: 0 10px 30px -10px hsl(190 100% 55% / 0.5);
    --shadow-neon: 0 0 30px hsl(280 100% 70% / 0.6), 0 0 60px hsl(190 100% 55% / 0.4);

    /* React Flow theming for dark mode */
    --rf-node-bg: hsl(222 47% 15%);
    --rf-node-border: hsl(280 50% 50%);
    --rf-node-text: hsl(210 40% 98%);
    --rf-node-selected: hsl(280 100% 70%);
    --rf-edge-stroke: hsl(280 70% 60%);
    --rf-background: hsl(222 47% 5%);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  .glass {
    background: hsl(var(--glass-bg));
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-elegant);
    transition: var(--transition-smooth);
  }

  .glass:hover {
    box-shadow: var(--shadow-glow);
    border-color: hsl(var(--primary) / 0.4);
  }

  .cyber-glow {
    box-shadow: var(--shadow-glow);
    transition: var(--transition-smooth);
  }

  .cyber-glow:hover {
    box-shadow: var(--shadow-neon);
  }

  .gradient-text {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .hover-scale {
    transition: var(--transition-bounce);
  }

  .hover-scale:hover {
    transform: scale(1.05);
  }

  .neon-border {
    border: 1px solid hsl(var(--primary) / 0.5);
    box-shadow: 0 0 10px hsl(var(--primary) / 0.3);
  }

  .light-glow {
    box-shadow: var(--shadow-accent);
  }

  /* React Flow Custom Styling */
  .react-flow {
    background: var(--rf-background);
  }

  .react-flow__node {
    background: var(--rf-node-bg) !important;
    border: 2px solid var(--rf-node-border) !important;
    color: var(--rf-node-text) !important;
    border-radius: 8px !important;
    font-weight: 600;
    transition: var(--transition-smooth);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  /* Game node type specific styling */
  .react-flow__node[data-node-type="scenario"],
  .react-flow__node[data-node-type="information"],
  .react-flow__node[data-node-type="problem"],
  .react-flow__node[data-node-type="system_core"] {
    min-width: 280px !important;
    max-width: 320px !important;
    padding: 16px !important;
    border-radius: 12px !important;
    background: linear-gradient(135deg, hsl(var(--primary) / 0.1), hsl(var(--accent) / 0.1)) !important;
    border: 2px solid hsl(var(--primary) / 0.3) !important;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;
  }

  /* Root causes and solutions get special styling */
  .react-flow__node[data-node-type="root_cause"],
  .react-flow__node[data-node-type="solution"] {
    min-width: 240px !important;
    max-width: 280px !important;
    padding: 14px !important;
    background: linear-gradient(135deg, hsl(var(--accent) / 0.1), hsl(var(--primary) / 0.05)) !important;
    border: 2px solid hsl(var(--accent) / 0.4) !important;
  }

  /* System nodes get distinct styling */
  .react-flow__node[data-node-type="process"],
  .react-flow__node[data-node-type="feedback"] {
    min-width: 200px !important;
    max-width: 240px !important;
    background: linear-gradient(135deg, hsl(var(--secondary) / 0.8), hsl(var(--muted) / 0.6)) !important;
    border: 2px solid hsl(var(--border)) !important;
  }

  /* Other node types remain compact */
  .react-flow__node[data-node-type="decision"],
  .react-flow__node[data-node-type="outcome"],
  .react-flow__node[data-node-type="symptom"],
  .react-flow__node[data-node-type="impact"],
  .react-flow__node[data-node-type="input"],
  .react-flow__node[data-node-type="output"],
  .react-flow__node[data-node-type="constraint"],
  .react-flow__node[data-node-type="stakeholder"] {
    min-width: 180px !important;
    max-width: 220px !important;
  }

  .react-flow__node:hover {
    border-color: hsl(var(--primary)) !important;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
  }

  .react-flow__node.selected {
    border-color: var(--rf-node-selected) !important;
    box-shadow: 0 0 30px hsl(var(--primary) / 0.6);
  }

  /* Dark mode specific overrides */
  .dark .react-flow__node {
    background: var(--rf-node-bg) !important;
    border-color: var(--rf-node-border) !important;
    color: var(--rf-node-text) !important;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .dark .react-flow__node:hover {
    border-color: hsl(var(--primary)) !important;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.6);
  }

  .dark .react-flow__node.selected {
    border-color: var(--rf-node-selected) !important;
    box-shadow: 0 0 30px hsl(var(--primary) / 0.8);
  }

  .react-flow__edge-path {
    stroke: var(--rf-edge-stroke);
    stroke-width: 3;
  }

  .react-flow__edge.animated .react-flow__edge-path {
    stroke: hsl(var(--accent));
    stroke-dasharray: 5;
    animation: dashdraw 0.5s linear infinite;
  }

  .react-flow__edge.selected .react-flow__edge-path {
    stroke: hsl(var(--primary));
  }

  .react-flow__controls {
    background: hsl(var(--card)) !important;
    border: 1px solid hsl(var(--border)) !important;
    border-radius: 8px;
  }

  .react-flow__controls button {
    background: hsl(var(--card)) !important;
    border-bottom: 1px solid hsl(var(--border)) !important;
    color: hsl(var(--foreground)) !important;
  }

  .react-flow__controls button:hover {
    background: hsl(var(--muted)) !important;
  }

  .react-flow__minimap {
    background: hsl(var(--card)) !important;
    border: 1px solid hsl(var(--border)) !important;
    border-radius: 8px;
  }

  /* Background pattern theming */
  .react-flow__background {
    fill: hsl(var(--muted-foreground) / 0.2);
  }

  .dark .react-flow__background {
    fill: hsl(var(--muted-foreground) / 0.1);
  }

  /* Node input/output handles */
  .react-flow__handle {
    background: hsl(var(--primary)) !important;
    border: 2px solid hsl(var(--background)) !important;
    width: 8px !important;
    height: 8px !important;
  }

  .dark .react-flow__handle {
    background: hsl(var(--primary)) !important;
    border: 2px solid hsl(var(--background)) !important;
  }

  .react-flow__handle:hover {
    background: hsl(var(--accent)) !important;
  }

  @keyframes dashdraw {
    to {
      stroke-dashoffset: -10;
    }
  }

  /* Ensure proper text contrast in all node types */
  .react-flow__node-input,
  .react-flow__node-output,
  .react-flow__node-default {
    background: var(--rf-node-bg) !important;
    border: 2px solid var(--rf-node-border) !important;
    color: var(--rf-node-text) !important;
  }

  .dark .react-flow__node-input,
  .dark .react-flow__node-output,
  .dark .react-flow__node-default {
    background: var(--rf-node-bg) !important;
    border: 2px solid var(--rf-node-border) !important;
    color: var(--rf-node-text) !important;
  }

  /* Custom utility classes */
  .scrollbar-hide {
    -ms-overflow-style: none;  /* Internet Explorer 10+ */
    scrollbar-width: none;     /* Firefox */
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;  /* Safari and Chrome */
  }
}
